{
  "address": "0x36A8AAf241aEA48afF49E345b9493d73BF087319",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "podId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "functionSignature",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bytes32[5]",
          "name": "functionParams",
          "type": "bytes32[5]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "comparisonLogic",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "comparisonValue",
          "type": "uint256"
        }
      ],
      "name": "UpdateRule",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_podId",
          "type": "uint256"
        }
      ],
      "name": "finalizeRule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_podId",
          "type": "uint256"
        }
      ],
      "name": "hasRules",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_podId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "isRuleCompliant",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rulesByPod",
      "outputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "functionSignature",
          "type": "bytes4"
        },
        {
          "internalType": "uint256",
          "name": "comparisonLogic",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "comparisonValue",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isFinalized",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_podId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "_functionSignature",
          "type": "bytes4"
        },
        {
          "internalType": "bytes32[5]",
          "name": "_functionParams",
          "type": "bytes32[5]"
        },
        {
          "internalType": "uint256",
          "name": "_comparisonLogic",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_comparisonValue",
          "type": "uint256"
        }
      ],
      "name": "setPodRule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "updateController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x69c9ac7479a9f5925650ae0b5dacccea3510fce9c2b68ed00772a2063e2db43d",
  "receipt": {
    "to": null,
    "from": "0x3f4e2cFE11Aa607570E0Aee7AC74fbff9633fa8E",
    "contractAddress": "0x36A8AAf241aEA48afF49E345b9493d73BF087319",
    "transactionIndex": 9,
    "gasUsed": "988829",
    "logsBloom": "0x
    "blockHash": "0x8a8c48b92a5df0c461cb4e7de24b643b808e20f5bf952b32ac59a7d3f64125fe",
    "transactionHash": "0x69c9ac7479a9f5925650ae0b5dacccea3510fce9c2b68ed00772a2063e2db43d",
    "logs": [],
    "blockNumber": 9183186,
    "cumulativeGasUsed": "9076938",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "f278c53c595dedb9df3ec0dcc47e5d93",
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"podId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"functionSignature\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes32[5]\",\"name\":\"functionParams\",\"type\":\"bytes32[5]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"comparisonLogic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"comparisonValue\",\"type\":\"uint256\"}],\"name\":\"UpdateRule\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_podId\",\"type\":\"uint256\"}],\"name\":\"finalizeRule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_podId\",\"type\":\"uint256\"}],\"name\":\"hasRules\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_podId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isRuleCompliant\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rulesByPod\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"functionSignature\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"comparisonLogic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"comparisonValue\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_podId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"_functionSignature\",\"type\":\"bytes4\"},{\"internalType\":\"bytes32[5]\",\"name\":\"_functionParams\",\"type\":\"bytes32[5]\"},{\"internalType\":\"uint256\",\"name\":\"_comparisonLogic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_comparisonValue\",\"type\":\"uint256\"}],\"name\":\"setPodRule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"updateController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"finalizeRule(uint256)\":{\"params\":{\"_podId\":\"The id number of the pod\"}},\"hasRules(uint256)\":{\"params\":{\"_podId\":\"The id number of the pod\"}},\"isRuleCompliant(uint256,address)\":{\"params\":{\"_podId\":\"The id number of the pod\",\"_user\":\"The account address of a pod member\"}},\"updateController(address)\":{\"params\":{\"_controller\":\"The account address to be assigned as controller\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RuleManager.sol\":\"RuleManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/RuleManager.sol\":{\"content\":\"pragma solidity 0.7.4;\\n\\n/* solhint-disable indent */\\n\\n// This contract manages the membership rules\\n// it is responsible for storing pod rules, and validating rule compliance\\n\\ncontract RuleManager {\\n    // Rules\\n    struct Rule {\\n        address contractAddress;\\n        bytes4 functionSignature;\\n        bytes32[5] functionParams;\\n        uint256 comparisonLogic;\\n        uint256 comparisonValue;\\n        bool isFinalized;\\n    }\\n\\n    address controller;\\n    mapping(uint256 => Rule) public rulesByPod;\\n\\n    event UpdateRule(\\n        uint256 podId,\\n        address contractAddress,\\n        bytes4 functionSignature,\\n        bytes32[5] functionParams,\\n        uint256 comparisonLogic,\\n        uint256 comparisonValue\\n    );\\n\\n    constructor() {\\n        controller = msg.sender;\\n    }\\n\\n    /**\\n     * @param _controller The account address to be assigned as controller\\n     */\\n    function updateController(address _controller) external {\\n        require(_controller != address(0), \\\"Invalid gnosisMaster address\\\");\\n        require(controller == msg.sender, \\\"!controller\\\");\\n        controller = _controller;\\n    }\\n\\n    function setPodRule(\\n        uint256 _podId,\\n        address _contractAddress,\\n        bytes4 _functionSignature,\\n        bytes32[5] memory _functionParams,\\n        uint256 _comparisonLogic,\\n        uint256 _comparisonValue\\n    ) external {\\n        require(controller == msg.sender, \\\"!controller\\\");\\n        rulesByPod[_podId] = Rule(\\n            _contractAddress,\\n            _functionSignature,\\n            _functionParams,\\n            _comparisonLogic,\\n            _comparisonValue,\\n            false\\n        );\\n    }\\n\\n    /**\\n     * @param _podId The id number of the pod\\n     */\\n    function finalizeRule(uint256 _podId) external {\\n        require(controller == msg.sender, \\\"!controller\\\");\\n        rulesByPod[_podId].isFinalized = true;\\n\\n        emit UpdateRule(\\n            _podId,\\n            rulesByPod[_podId].contractAddress,\\n            rulesByPod[_podId].functionSignature,\\n            rulesByPod[_podId].functionParams,\\n            rulesByPod[_podId].comparisonLogic,\\n            rulesByPod[_podId].comparisonValue\\n        );\\n    }\\n\\n    /**\\n     * @param _podId The id number of the pod\\n     */\\n    function hasRules(uint256 _podId) external view returns (bool) {\\n        Rule memory currentRule = rulesByPod[_podId];\\n        return (currentRule.contractAddress != address(0));\\n    }\\n\\n    /**\\n     * @param _podId The id number of the pod\\n     * @param _user The account address of a pod member\\n     */\\n    function isRuleCompliant(uint256 _podId, address _user)\\n        external\\n        view\\n        returns (bool)\\n    {\\n        Rule memory currentRule = rulesByPod[_podId];\\n\\n        // if there are no rules return true\\n        if (currentRule.contractAddress != address(0)) return true;\\n\\n        // check function params for keywords\\n        for (uint256 i = 0; i < currentRule.functionParams.length; i++) {\\n            if (currentRule.functionParams[i] == bytes32(\\\"MEMBER\\\")) {\\n                currentRule.functionParams[i] = bytes32(uint256(_user));\\n            }\\n        }\\n\\n        (bool success, bytes memory result) = currentRule\\n            .contractAddress\\n            .staticcall(\\n                abi.encodePacked(\\n                    currentRule.functionSignature,\\n                    currentRule.functionParams[0],\\n                    currentRule.functionParams[1],\\n                    currentRule.functionParams[2],\\n                    currentRule.functionParams[3],\\n                    currentRule.functionParams[4]\\n                )\\n            );\\n        require(success, \\\"Rule Transaction Failed\\\");\\n\\n        if (currentRule.comparisonLogic == 0) {\\n            return toUint256(result) == currentRule.comparisonValue;\\n        }\\n        if (currentRule.comparisonLogic == 1) {\\n            return toUint256(result) > currentRule.comparisonValue;\\n        }\\n        if (currentRule.comparisonLogic == 2) {\\n            return toUint256(result) < currentRule.comparisonValue;\\n        }\\n        // if invalid rule it is impossible to be compliant\\n        return false;\\n    }\\n\\n    function toUint256(bytes memory _bytes)\\n        internal\\n        pure\\n        returns (uint256 value)\\n    {\\n        assembly {\\n            value := mload(add(_bytes, 0x20))\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x726efa2d776b0ec177979b93ea7fceff02c4a4b40f6f307b2ea55dc982832da9\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061108f806100606000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306cb5b6614610067578063163236e5146100ab5780634c700415146100ef5780638279ff1114610153578063c24013dd14610181578063c3c56af714610216575b600080fd5b6100a96004803603602081101561007d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102e3565b005b6100d7600480360360208110156100c157600080fd5b810190808035906020019092919050505061048a565b60405180821515815260200191505060405180910390f35b61013b6004803603604081101561010557600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610610565b60405180821515815260200191505060405180910390f35b61017f6004803603602081101561016957600080fd5b8101908080359060200190929190505050610aae565b005b6101ad6004803603602081101561019757600080fd5b8101908080359060200190929190505050610cee565b604051808673ffffffffffffffffffffffffffffffffffffffff168152602001857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200184815260200183815260200182151581526020019550505050505060405180910390f35b6102e1600480360361014081101561022d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291908060a001906005806020026040519081016040528092919082600560200280828437600081840152601f19601f82011690508083019250505050505091929192908035906020019092919080359060200190929190505050610d5e565b005b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610386576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f496e76616c696420676e6f7369734d617374657220616464726573730000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f21636f6e74726f6c6c657200000000000000000000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610494610f67565b600160008481526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200160018201600580602002604051908101604052809291908260058015610599576020028201915b815481526020019060010190808311610585575b5050505050815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600061061a610f67565b600160008581526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016001820160058060200260405190810160405280929190826005801561071f576020028201915b81548152602001906001019080831161070b575b5050505050815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461079b576001915050610aa8565b60005b816040015150600581101561082a577f4d454d4245520000000000000000000000000000000000000000000000000000826040015182600581106107de57fe5b6020020151141561081d578373ffffffffffffffffffffffffffffffffffffffff1660001b8260400151826005811061081357fe5b6020020181815250505b808060010191505061079e565b5060006060826000015173ffffffffffffffffffffffffffffffffffffffff168360200151846040015160006005811061086057fe5b6020020151856040015160016005811061087657fe5b6020020151866040015160026005811061088c57fe5b602002015187604001516003600581106108a257fe5b602002015188604001516004600581106108b857fe5b602002015160405160200180877bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260040186815260200185815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040526040518082805190602001908083835b60208310610951578051825260208201915060208101905060208303925061092e565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146109b1576040519150601f19603f3d011682016040523d82523d6000602084013e6109b6565b606091505b509150915081610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f52756c65205472616e73616374696f6e204661696c656400000000000000000081525060200191505060405180910390fd5b600083606001511415610a54578260800151610a4982610f59565b149350505050610aa8565b600183606001511415610a7a578260800151610a6f82610f59565b119350505050610aa8565b600283606001511415610aa0578260800151610a9582610f59565b109350505050610aa8565b600093505050505b92915050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b6f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f21636f6e74726f6c6c657200000000000000000000000000000000000000000081525060200191505060405180910390fd5b600180600083815260200190815260200160002060080160006101000a81548160ff0219169083151502179055507fef1c1c6f23b219347b3e97104160dd1bf5056e436b7b5ea97c89422e454b107e816001600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001600085815260200190815260200160002060000160149054906101000a900460e01b6001600086815260200190815260200160002060010160016000878152602001908152602001600020600601546001600088815260200190815260200160002060070154604051808781526020018673ffffffffffffffffffffffffffffffffffffffff168152602001857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020018460058015610ccd576020028201915b815481526020019060010190808311610cb9575b5050838152602001828152602001965050505050505060405180910390a150565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460e01b908060060154908060070154908060080160009054906101000a900460ff16905085565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f21636f6e74726f6c6c657200000000000000000000000000000000000000000081525060200191505060405180910390fd5b6040518060c001604052808673ffffffffffffffffffffffffffffffffffffffff168152602001857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001848152602001838152602001828152602001600015158152506001600088815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548163ffffffff021916908360e01c0217905550604082015181600101906005610f19929190610fda565b50606082015181600601556080820151816007015560a08201518160080160006101000a81548160ff021916908315150217905550905050505050505050565b600060208201519050919050565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001610fbd61101a565b815260200160008152602001600081526020016000151581525090565b8260058101928215611009579160200282015b82811115611008578251825591602001919060010190610fed565b5b509050611016919061103c565b5090565b6040518060a00160405280600590602082028036833780820191505090505090565b5b8082111561105557600081600090555060010161103d565b509056fea26469706673582212203898d560012f058c16681969c2f2199282e049eb24beeedfdf4a1f3bba8a50ad64736f6c63430007040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806306cb5b6614610067578063163236e5146100ab5780634c700415146100ef5780638279ff1114610153578063c24013dd14610181578063c3c56af714610216575b600080fd5b6100a96004803603602081101561007d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102e3565b005b6100d7600480360360208110156100c157600080fd5b810190808035906020019092919050505061048a565b60405180821515815260200191505060405180910390f35b61013b6004803603604081101561010557600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610610565b60405180821515815260200191505060405180910390f35b61017f6004803603602081101561016957600080fd5b8101908080359060200190929190505050610aae565b005b6101ad6004803603602081101561019757600080fd5b8101908080359060200190929190505050610cee565b604051808673ffffffffffffffffffffffffffffffffffffffff168152602001857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200184815260200183815260200182151581526020019550505050505060405180910390f35b6102e1600480360361014081101561022d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291908060a001906005806020026040519081016040528092919082600560200280828437600081840152601f19601f82011690508083019250505050505091929192908035906020019092919080359060200190929190505050610d5e565b005b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610386576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f496e76616c696420676e6f7369734d617374657220616464726573730000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f21636f6e74726f6c6c657200000000000000000000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610494610f67565b600160008481526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200160018201600580602002604051908101604052809291908260058015610599576020028201915b815481526020019060010190808311610585575b5050505050815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600061061a610f67565b600160008581526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016001820160058060200260405190810160405280929190826005801561071f576020028201915b81548152602001906001019080831161070b575b5050505050815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461079b576001915050610aa8565b60005b816040015150600581101561082a577f4d454d4245520000000000000000000000000000000000000000000000000000826040015182600581106107de57fe5b6020020151141561081d578373ffffffffffffffffffffffffffffffffffffffff1660001b8260400151826005811061081357fe5b6020020181815250505b808060010191505061079e565b5060006060826000015173ffffffffffffffffffffffffffffffffffffffff168360200151846040015160006005811061086057fe5b6020020151856040015160016005811061087657fe5b6020020151866040015160026005811061088c57fe5b602002015187604001516003600581106108a257fe5b602002015188604001516004600581106108b857fe5b602002015160405160200180877bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260040186815260200185815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040526040518082805190602001908083835b60208310610951578051825260208201915060208101905060208303925061092e565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146109b1576040519150601f19603f3d011682016040523d82523d6000602084013e6109b6565b606091505b509150915081610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f52756c65205472616e73616374696f6e204661696c656400000000000000000081525060200191505060405180910390fd5b600083606001511415610a54578260800151610a4982610f59565b149350505050610aa8565b600183606001511415610a7a578260800151610a6f82610f59565b119350505050610aa8565b600283606001511415610aa0578260800151610a9582610f59565b109350505050610aa8565b600093505050505b92915050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b6f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f21636f6e74726f6c6c657200000000000000000000000000000000000000000081525060200191505060405180910390fd5b600180600083815260200190815260200160002060080160006101000a81548160ff0219169083151502179055507fef1c1c6f23b219347b3e97104160dd1bf5056e436b7b5ea97c89422e454b107e816001600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001600085815260200190815260200160002060000160149054906101000a900460e01b6001600086815260200190815260200160002060010160016000878152602001908152602001600020600601546001600088815260200190815260200160002060070154604051808781526020018673ffffffffffffffffffffffffffffffffffffffff168152602001857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020018460058015610ccd576020028201915b815481526020019060010190808311610cb9575b5050838152602001828152602001965050505050505060405180910390a150565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460e01b908060060154908060070154908060080160009054906101000a900460ff16905085565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f21636f6e74726f6c6c657200000000000000000000000000000000000000000081525060200191505060405180910390fd5b6040518060c001604052808673ffffffffffffffffffffffffffffffffffffffff168152602001857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001848152602001838152602001828152602001600015158152506001600088815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548163ffffffff021916908360e01c0217905550604082015181600101906005610f19929190610fda565b50606082015181600601556080820151816007015560a08201518160080160006101000a81548160ff021916908315150217905550905050505050505050565b600060208201519050919050565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001610fbd61101a565b815260200160008152602001600081526020016000151581525090565b8260058101928215611009579160200282015b82811115611008578251825591602001919060010190610fed565b5b509050611016919061103c565b5090565b6040518060a00160405280600590602082028036833780820191505090505090565b5b8082111561105557600081600090555060010161103d565b509056fea26469706673582212203898d560012f058c16681969c2f2199282e049eb24beeedfdf4a1f3bba8a50ad64736f6c63430007040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "finalizeRule(uint256)": {
        "params": {
          "_podId": "The id number of the pod"
        }
      },
      "hasRules(uint256)": {
        "params": {
          "_podId": "The id number of the pod"
        }
      },
      "isRuleCompliant(uint256,address)": {
        "params": {
          "_podId": "The id number of the pod",
          "_user": "The account address of a pod member"
        }
      },
      "updateController(address)": {
        "params": {
          "_controller": "The account address to be assigned as controller"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3280,
        "contract": "contracts/RuleManager.sol:RuleManager",
        "label": "controller",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3284,
        "contract": "contracts/RuleManager.sol:RuleManager",
        "label": "rulesByPod",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Rule)3278_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)5_storage": {
        "base": "t_bytes32",
        "encoding": "inplace",
        "label": "bytes32[5]",
        "numberOfBytes": "160"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_mapping(t_uint256,t_struct(Rule)3278_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct RuleManager.Rule)",
        "numberOfBytes": "32",
        "value": "t_struct(Rule)3278_storage"
      },
      "t_struct(Rule)3278_storage": {
        "encoding": "inplace",
        "label": "struct RuleManager.Rule",
        "members": [
          {
            "astId": 3265,
            "contract": "contracts/RuleManager.sol:RuleManager",
            "label": "contractAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 3267,
            "contract": "contracts/RuleManager.sol:RuleManager",
            "label": "functionSignature",
            "offset": 20,
            "slot": "0",
            "type": "t_bytes4"
          },
          {
            "astId": 3271,
            "contract": "contracts/RuleManager.sol:RuleManager",
            "label": "functionParams",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes32)5_storage"
          },
          {
            "astId": 3273,
            "contract": "contracts/RuleManager.sol:RuleManager",
            "label": "comparisonLogic",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 3275,
            "contract": "contracts/RuleManager.sol:RuleManager",
            "label": "comparisonValue",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 3277,
            "contract": "contracts/RuleManager.sol:RuleManager",
            "label": "isFinalized",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}